{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt \n",
    "from sklearn.model_selection import train_test_split \n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UserGenere</th>\n",
       "      <th>UserAge</th>\n",
       "      <th>UserExperience</th>\n",
       "      <th>TimeStamp</th>\n",
       "      <th>PlayerSpeed</th>\n",
       "      <th>PlayerAcceleration</th>\n",
       "      <th>CameraRotationZ</th>\n",
       "      <th>GameFps</th>\n",
       "      <th>DiscomfortLevel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.011019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.046341</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.005759</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.043240</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.007840</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.049941</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.007802</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.037382</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.007293</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.032407</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   UserGenere  UserAge  UserExperience  TimeStamp  PlayerSpeed  \\\n",
       "0           1        0               1   0.011019            0   \n",
       "1           1        0               1   1.005759            0   \n",
       "2           1        0               1   2.007840            0   \n",
       "3           1        0               1   3.007802            0   \n",
       "4           1        0               1   4.007293            0   \n",
       "\n",
       "   PlayerAcceleration  CameraRotationZ  GameFps  DiscomfortLevel  \n",
       "0                   0        -0.046341        0                0  \n",
       "1                   0        -0.043240       90                0  \n",
       "2                   0        -0.049941       90                0  \n",
       "3                   0        -0.037382       90                0  \n",
       "4                   0        -0.032407       90                0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Importar o dado\n",
    "data=pd.read_csv('DATASET-2.csv')\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UserGenere</th>\n",
       "      <th>UserAge</th>\n",
       "      <th>UserExperience</th>\n",
       "      <th>TimeStamp</th>\n",
       "      <th>PlayerSpeed</th>\n",
       "      <th>PlayerAcceleration</th>\n",
       "      <th>CameraRotationZ</th>\n",
       "      <th>GameFps</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>3.546876</td>\n",
       "      <td>-1.677924</td>\n",
       "      <td>-1.408450</td>\n",
       "      <td>-0.013808</td>\n",
       "      <td>-0.711169</td>\n",
       "      <td>-23.878237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>3.546876</td>\n",
       "      <td>-1.666502</td>\n",
       "      <td>-1.408450</td>\n",
       "      <td>-0.013808</td>\n",
       "      <td>-0.670109</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>3.546876</td>\n",
       "      <td>-1.654995</td>\n",
       "      <td>-1.408450</td>\n",
       "      <td>-0.013808</td>\n",
       "      <td>-0.758837</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>3.546876</td>\n",
       "      <td>-1.643514</td>\n",
       "      <td>-1.408450</td>\n",
       "      <td>-0.013808</td>\n",
       "      <td>-0.592543</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>3.546876</td>\n",
       "      <td>-1.632037</td>\n",
       "      <td>-1.408450</td>\n",
       "      <td>-0.013808</td>\n",
       "      <td>-0.526669</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4137</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>0.825719</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-0.679031</td>\n",
       "      <td>0.544113</td>\n",
       "      <td>0.816702</td>\n",
       "      <td>0.775641</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4138</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-0.449350</td>\n",
       "      <td>0.585656</td>\n",
       "      <td>0.484498</td>\n",
       "      <td>-0.530509</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4139</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>2.174883</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>1.617489</td>\n",
       "      <td>0.980323</td>\n",
       "      <td>0.761335</td>\n",
       "      <td>-0.574257</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4140</th>\n",
       "      <td>-1.150806</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>1.720940</td>\n",
       "      <td>0.751832</td>\n",
       "      <td>0.650600</td>\n",
       "      <td>1.000010</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4141</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>0.825719</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-0.989039</td>\n",
       "      <td>-1.221503</td>\n",
       "      <td>-1.010421</td>\n",
       "      <td>-0.756348</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4142 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      UserGenere   UserAge  UserExperience  TimeStamp  PlayerSpeed  \\\n",
       "0       0.868956 -0.523444        3.546876  -1.677924    -1.408450   \n",
       "1       0.868956 -0.523444        3.546876  -1.666502    -1.408450   \n",
       "2       0.868956 -0.523444        3.546876  -1.654995    -1.408450   \n",
       "3       0.868956 -0.523444        3.546876  -1.643514    -1.408450   \n",
       "4       0.868956 -0.523444        3.546876  -1.632037    -1.408450   \n",
       "...          ...       ...             ...        ...          ...   \n",
       "4137    0.868956  0.825719       -0.281938  -0.679031     0.544113   \n",
       "4138    0.868956 -0.523444       -0.281938  -0.449350     0.585656   \n",
       "4139    0.868956  2.174883       -0.281938   1.617489     0.980323   \n",
       "4140   -1.150806 -0.523444       -0.281938   1.720940     0.751832   \n",
       "4141    0.868956  0.825719       -0.281938  -0.989039    -1.221503   \n",
       "\n",
       "      PlayerAcceleration  CameraRotationZ    GameFps  \n",
       "0              -0.013808        -0.711169 -23.878237  \n",
       "1              -0.013808        -0.670109   0.133592  \n",
       "2              -0.013808        -0.758837   0.133592  \n",
       "3              -0.013808        -0.592543   0.133592  \n",
       "4              -0.013808        -0.526669   0.133592  \n",
       "...                  ...              ...        ...  \n",
       "4137            0.816702         0.775641   0.133592  \n",
       "4138            0.484498        -0.530509   0.133592  \n",
       "4139            0.761335        -0.574257   0.133592  \n",
       "4140            0.650600         1.000010   0.133592  \n",
       "4141           -1.010421        -0.756348   0.133592  \n",
       "\n",
       "[4142 rows x 8 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# criar variaveis X e Y (classe), retiro a classe das variaveis de teste\n",
    "X=data.drop('DiscomfortLevel',axis=1)\n",
    "cols=X.columns\n",
    "Y=data['DiscomfortLevel']\n",
    "\n",
    "#Formato os dados em X para manter todos com a mesma escala\n",
    "scaler=StandardScaler()\n",
    "X=scaler.fit_transform(X)\n",
    "X=pd.DataFrame(X)\n",
    "X.columns=cols\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Separo as variaveis para o preditor com tamanho do teste de 30%\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=2) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UserGenere</th>\n",
       "      <th>UserAge</th>\n",
       "      <th>UserExperience</th>\n",
       "      <th>TimeStamp</th>\n",
       "      <th>PlayerSpeed</th>\n",
       "      <th>PlayerAcceleration</th>\n",
       "      <th>CameraRotationZ</th>\n",
       "      <th>GameFps</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2468</th>\n",
       "      <td>-1.150806</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>1.043180</td>\n",
       "      <td>-1.366906</td>\n",
       "      <td>-0.955054</td>\n",
       "      <td>0.660761</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3115</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-0.724954</td>\n",
       "      <td>-0.349081</td>\n",
       "      <td>0.872070</td>\n",
       "      <td>-0.148333</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3497</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>2.174883</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-1.390811</td>\n",
       "      <td>-1.263047</td>\n",
       "      <td>0.263028</td>\n",
       "      <td>0.612048</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2578</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>0.825719</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>0.423238</td>\n",
       "      <td>0.336393</td>\n",
       "      <td>0.816702</td>\n",
       "      <td>0.672692</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>3.546876</td>\n",
       "      <td>-0.885609</td>\n",
       "      <td>-0.452941</td>\n",
       "      <td>0.872070</td>\n",
       "      <td>-0.563386</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3335</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-1.012010</td>\n",
       "      <td>-0.515257</td>\n",
       "      <td>-2.283871</td>\n",
       "      <td>0.381746</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1099</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>0.825719</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-1.230203</td>\n",
       "      <td>1.229587</td>\n",
       "      <td>0.484498</td>\n",
       "      <td>-0.188731</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2514</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>0.825719</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>0.147635</td>\n",
       "      <td>1.104955</td>\n",
       "      <td>0.650600</td>\n",
       "      <td>1.537504</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3606</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>1.341981</td>\n",
       "      <td>1.188043</td>\n",
       "      <td>0.373763</td>\n",
       "      <td>1.365900</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2575</th>\n",
       "      <td>0.868956</td>\n",
       "      <td>-0.523444</td>\n",
       "      <td>-0.281938</td>\n",
       "      <td>-0.897183</td>\n",
       "      <td>-0.972239</td>\n",
       "      <td>0.927437</td>\n",
       "      <td>0.152067</td>\n",
       "      <td>0.133592</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2899 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      UserGenere   UserAge  UserExperience  TimeStamp  PlayerSpeed  \\\n",
       "2468   -1.150806 -0.523444       -0.281938   1.043180    -1.366906   \n",
       "3115    0.868956 -0.523444       -0.281938  -0.724954    -0.349081   \n",
       "3497    0.868956  2.174883       -0.281938  -1.390811    -1.263047   \n",
       "2578    0.868956  0.825719       -0.281938   0.423238     0.336393   \n",
       "69      0.868956 -0.523444        3.546876  -0.885609    -0.452941   \n",
       "...          ...       ...             ...        ...          ...   \n",
       "3335    0.868956 -0.523444       -0.281938  -1.012010    -0.515257   \n",
       "1099    0.868956  0.825719       -0.281938  -1.230203     1.229587   \n",
       "2514    0.868956  0.825719       -0.281938   0.147635     1.104955   \n",
       "3606    0.868956 -0.523444       -0.281938   1.341981     1.188043   \n",
       "2575    0.868956 -0.523444       -0.281938  -0.897183    -0.972239   \n",
       "\n",
       "      PlayerAcceleration  CameraRotationZ   GameFps  \n",
       "2468           -0.955054         0.660761  0.133592  \n",
       "3115            0.872070        -0.148333  0.133592  \n",
       "3497            0.263028         0.612048  0.133592  \n",
       "2578            0.816702         0.672692  0.133592  \n",
       "69              0.872070        -0.563386  0.133592  \n",
       "...                  ...              ...       ...  \n",
       "3335           -2.283871         0.381746  0.133592  \n",
       "1099            0.484498        -0.188731  0.133592  \n",
       "2514            0.650600         1.537504  0.133592  \n",
       "3606            0.373763         1.365900  0.133592  \n",
       "2575            0.927437         0.152067  0.133592  \n",
       "\n",
       "[2899 rows x 8 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score : 0.7385358004827032\n",
      "Precision Score : 0.7253414264036419\n",
      "Recall Score : 0.7684887459807074\n",
      "F1 Score : 0.7462919594067136\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.75      0.71      0.73       621\n",
      "           1       0.72      0.77      0.75       622\n",
      "\n",
      "    accuracy                           0.74      1243\n",
      "   macro avg       0.74      0.74      0.74      1243\n",
      "weighted avg       0.74      0.74      0.74      1243\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#Logistic regression\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "# Fit regressao logistica\n",
    "clf=LogisticRegression(random_state=1)\n",
    "clf.fit(X_train,Y_train)\n",
    "# Previsao do conjunto \n",
    "y_prediction=mod.predict(X_test)\n",
    "\n",
    "# New Model Evaluation metrics \n",
    "print('Accuracy Score : ' + str(accuracy_score(Y_test,y_pred_acc)))\n",
    "print('Precision Score : ' + str(precision_score(Y_test,y_pred_acc)))\n",
    "print('Recall Score : ' + str(recall_score(Y_test,y_pred_acc)))\n",
    "print('F1 Score : ' + str(f1_score(Y_test,y_pred_acc)))\n",
    "\n",
    "#Logistic Regression (Grid Search) Confusion matrix\n",
    "confusion_matrix(Y_test,y_pred_acc)\n",
    "\n",
    "# Printo informacoes da classificacao\n",
    "print(classification_report(y_true=Y_test,y_pred=y_prediction))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'penalty': ['l1', 'l2'], 'C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25]}\n",
      "Fitting 10 folds for each of 16 candidates, totalling 160 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Using backend LokyBackend with 4 concurrent workers.\n",
      "[Parallel(n_jobs=4)]: Done  68 tasks      | elapsed:    2.3s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score : 0.7385358004827032\n",
      "Precision Score : 0.7253414264036419\n",
      "Recall Score : 0.7684887459807074\n",
      "F1 Score : 0.7462919594067136\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.75      0.71      0.73       621\n",
      "           1       0.72      0.77      0.75       622\n",
      "\n",
      "    accuracy                           0.74      1243\n",
      "   macro avg       0.74      0.74      0.74      1243\n",
      "weighted avg       0.74      0.74      0.74      1243\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=4)]: Done 160 out of 160 | elapsed:    2.7s finished\n"
     ]
    }
   ],
   "source": [
    "#Grid Search - nao teve resultado relevante (nao preciso usar)\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "#solver : {â€˜newton-cgâ€™, â€˜lbfgsâ€™, â€˜liblinearâ€™, â€˜sagâ€™, â€˜sagaâ€™}, default=â€™lbfgsâ€™\n",
    "clf = LogisticRegression(C=1, penalty='l1', solver='liblinear')\n",
    "\n",
    "#OpÃ§Ãµes para mais de uma camada escondida\n",
    "camadas=((1,2),(2,3),(3,4),(4,5),(5,6),(4,4),(5,5),(1,1),(2,2),(3,3),(5,4),(5,2),(5,3),(5,1),1,2,3,4,5,6,7,8,9,10)\n",
    "\n",
    "parametros={'penalty': ['l1', 'l2'],'C':[0.001,.009,0.01,.09,1,5,10,25]}\n",
    "\n",
    "grid_clf_acc = GridSearchCV(clf,\n",
    "                            param_grid = parametros,\n",
    "                            cv = 10,scoring= 'recall',\n",
    "                            verbose=True,\n",
    "                            n_jobs=4,\n",
    "                            return_train_score=True)\n",
    "\n",
    "print(parametros)\n",
    "grid_clf_acc.fit(X_train, Y_train)\n",
    "\n",
    "#Predict values based on new parameters\n",
    "y_pred_acc = grid_clf_acc.predict(X_test)\n",
    "\n",
    "# New Model Evaluation metrics \n",
    "print('Accuracy Score : ' + str(accuracy_score(Y_test,y_pred_acc)))\n",
    "print('Precision Score : ' + str(precision_score(Y_test,y_pred_acc)))\n",
    "print('Recall Score : ' + str(recall_score(Y_test,y_pred_acc)))\n",
    "print('F1 Score : ' + str(f1_score(Y_test,y_pred_acc)))\n",
    "\n",
    "#Logistic Regression (Grid Search) Confusion matrix\n",
    "confusion_matrix(Y_test,y_pred_acc)\n",
    "\n",
    "print(classification_report(y_true=Y_test,y_pred=y_prediction))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'UserGenere': 1.056023755296034,\n",
       " 'UserAge': -0.008813932870834772,\n",
       " 'UserExperience': -0.9808252155569881,\n",
       " 'TimeStamp': 0.8428009442364539,\n",
       " 'PlayerSpeed': -0.12906078338658872,\n",
       " 'PlayerAcceleration': 0.020520975210146133,\n",
       " 'CameraRotationZ': 0.011241477704640523,\n",
       " 'GameFps': 0.48460644551729526,\n",
       " 'intercept': array([-0.04350846])}"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Imprimo os coeficientes gerados pela regressao logistica\n",
    "coefs=dict(zip(list(cols),clf.coef_[0]))\n",
    "coefs['intercept']=clf.intercept_\n",
    "coefs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since logistic regression calculates the probabilities of a class being 1 by taking the sigmoid of product of coefficients with predictors, therefore, the highest positive contributor will be strongest in determining the class label 1 and the lowest negative contrbutor will be the strongest in determining the class label as 0. \n",
    "\n",
    "Como a regressÃ£o logÃ­stica calcula as probabilidades de uma classe ser 1, obtendo o sigmÃ³ide do produto dos coeficientes com preditores, portanto, o maior contribuinte positivo serÃ¡ mais forte na determinaÃ§Ã£o do rÃ³tulo da classe 1 e o menor contrbutor negativo serÃ¡ o mais forte na determinaÃ§Ã£o da classe rotular como 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Faco calculo com uma funcao sigmoid dos coeficientes\n",
    "#A funÃ§Ã£o sigmoide Ã© uma funÃ§Ã£o matemÃ¡tica de amplo uso em campos como a economia e a computaÃ§Ã£o.\n",
    "# O nome \"sigmoide\" vem da forma em S do seu grÃ¡fico. Ela Ã© definida como: {displaystyle f (x)= {frac {1} {1+e^ {-x}}}}\n",
    "\n",
    "data['UserGenere_contri']=data['UserGenere']*coefs['UserGenere']\n",
    "data['UserAge_contri']=data['UserAge']*coefs['UserAge']\n",
    "data['UserExperience_contri']=data['UserExperience']*coefs['UserExperience']\n",
    "data['TimeStamp_contri']=data['TimeStamp']*coefs['TimeStamp']\n",
    "data['PlayerSpeed_contri']=data['PlayerSpeed']*coefs['PlayerSpeed']\n",
    "data['PlayerAcceleration_contri']=data['PlayerAcceleration']*coefs['PlayerAcceleration']\n",
    "data['CameraRotationZ_contri']=data['CameraRotationZ']*coefs['CameraRotationZ']\n",
    "data['GameFps_contri']=data['GameFps']*coefs['GameFps']\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_cols_p=['UserGenere','UserAge','UserExperience']\n",
    "new_cols_g=['TimeStamp','PlayerSpeed','PlayerAcceleration','CameraRotationZ','GameFps']\n",
    "# calculating the maximum contributor if Pain =1 or the minumym contributor if Pain=0\n",
    "importanceProfile=[]\n",
    "importanceGame=[]\n",
    "# loop through the entire data\n",
    "for j in range(data.shape[0]):\n",
    "    # take the calculated values\n",
    "    vals=data.loc[j,['UserGenere_contri','UserAge_contri','UserExperience_contri']].values\n",
    "    valsG=data.loc[j,['TimeStamp_contri','PlayerSpeed_contri','PlayerAcceleration_contri','CameraRotationZ_contri','GameFps_contri']].values\n",
    "    \n",
    "    max_index=vals.argmax()# index of maxima in the calculated values\n",
    "    min_index=vals.argmin()# index of minima in the calculated values\n",
    "    \n",
    "    max_indexG=valsG.argmax()# index of maxima in the calculated values\n",
    "    min_indexG=valsG.argmin()# index of minima in the calculated values\n",
    "    \n",
    "    # if pain is 0 , then take the variable giving the minimum value else take the variable giving maximum value\n",
    "    if data.loc[j,'DiscomfortLevel']==0:\n",
    "        importanceProfile.append(new_cols_p[min_index])\n",
    "        importanceGame.append(new_cols_g[min_indexG])\n",
    "    else:\n",
    "        importanceProfile.append(new_cols_p[max_index])\n",
    "        importanceGame.append(new_cols_g[min_indexG])\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "# setting the importance in data\n",
    "data['importanceProfile']=importanceProfile\n",
    "data['importanceGame']=importanceGame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UserGenere</th>\n",
       "      <th>UserAge</th>\n",
       "      <th>UserExperience</th>\n",
       "      <th>TimeStamp</th>\n",
       "      <th>PlayerSpeed</th>\n",
       "      <th>PlayerAcceleration</th>\n",
       "      <th>CameraRotationZ</th>\n",
       "      <th>GameFps</th>\n",
       "      <th>DiscomfortLevel</th>\n",
       "      <th>UserGenere_contri</th>\n",
       "      <th>UserAge_contri</th>\n",
       "      <th>UserExperience_contri</th>\n",
       "      <th>TimeStamp_contri</th>\n",
       "      <th>PlayerSpeed_contri</th>\n",
       "      <th>PlayerAcceleration_contri</th>\n",
       "      <th>CameraRotationZ_contri</th>\n",
       "      <th>GameFps_contri</th>\n",
       "      <th>importanceProfile</th>\n",
       "      <th>importanceGame</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.011019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.046341</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.980825</td>\n",
       "      <td>0.009287</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000521</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>UserExperience</td>\n",
       "      <td>CameraRotationZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.005759</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.043240</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.980825</td>\n",
       "      <td>0.847655</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000486</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserExperience</td>\n",
       "      <td>CameraRotationZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.007840</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.049941</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.980825</td>\n",
       "      <td>1.692209</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000561</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserExperience</td>\n",
       "      <td>CameraRotationZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.007802</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.037382</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.980825</td>\n",
       "      <td>2.534978</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000420</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserExperience</td>\n",
       "      <td>CameraRotationZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.007293</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.032407</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.980825</td>\n",
       "      <td>3.377350</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000364</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserExperience</td>\n",
       "      <td>CameraRotationZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4137</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>87.005350</td>\n",
       "      <td>94</td>\n",
       "      <td>15</td>\n",
       "      <td>0.065947</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.008814</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>73.328191</td>\n",
       "      <td>-12.131714</td>\n",
       "      <td>0.307815</td>\n",
       "      <td>0.000741</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserGenere</td>\n",
       "      <td>PlayerSpeed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4138</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>107.008400</td>\n",
       "      <td>96</td>\n",
       "      <td>9</td>\n",
       "      <td>-0.032697</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>90.186781</td>\n",
       "      <td>-12.389835</td>\n",
       "      <td>0.184689</td>\n",
       "      <td>-0.000368</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserGenere</td>\n",
       "      <td>PlayerSpeed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4139</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>287.010900</td>\n",
       "      <td>115</td>\n",
       "      <td>14</td>\n",
       "      <td>-0.036001</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.017628</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>241.893058</td>\n",
       "      <td>-14.841990</td>\n",
       "      <td>0.287294</td>\n",
       "      <td>-0.000405</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserGenere</td>\n",
       "      <td>PlayerSpeed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4140</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>296.020600</td>\n",
       "      <td>104</td>\n",
       "      <td>12</td>\n",
       "      <td>0.082892</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>249.486441</td>\n",
       "      <td>-13.422321</td>\n",
       "      <td>0.246252</td>\n",
       "      <td>0.000932</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserGenere</td>\n",
       "      <td>PlayerSpeed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4141</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>60.006500</td>\n",
       "      <td>9</td>\n",
       "      <td>-18</td>\n",
       "      <td>-0.049753</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1.056024</td>\n",
       "      <td>-0.008814</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>50.573535</td>\n",
       "      <td>-1.161547</td>\n",
       "      <td>-0.369378</td>\n",
       "      <td>-0.000559</td>\n",
       "      <td>43.61458</td>\n",
       "      <td>UserGenere</td>\n",
       "      <td>PlayerSpeed</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4142 rows Ã— 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      UserGenere  UserAge  UserExperience   TimeStamp  PlayerSpeed  \\\n",
       "0              1        0               1    0.011019            0   \n",
       "1              1        0               1    1.005759            0   \n",
       "2              1        0               1    2.007840            0   \n",
       "3              1        0               1    3.007802            0   \n",
       "4              1        0               1    4.007293            0   \n",
       "...          ...      ...             ...         ...          ...   \n",
       "4137           1        1               0   87.005350           94   \n",
       "4138           1        0               0  107.008400           96   \n",
       "4139           1        2               0  287.010900          115   \n",
       "4140           0        0               0  296.020600          104   \n",
       "4141           1        1               0   60.006500            9   \n",
       "\n",
       "      PlayerAcceleration  CameraRotationZ  GameFps  DiscomfortLevel  \\\n",
       "0                      0        -0.046341        0                0   \n",
       "1                      0        -0.043240       90                0   \n",
       "2                      0        -0.049941       90                0   \n",
       "3                      0        -0.037382       90                0   \n",
       "4                      0        -0.032407       90                0   \n",
       "...                  ...              ...      ...              ...   \n",
       "4137                  15         0.065947       90                1   \n",
       "4138                   9        -0.032697       90                1   \n",
       "4139                  14        -0.036001       90                1   \n",
       "4140                  12         0.082892       90                1   \n",
       "4141                 -18        -0.049753       90                1   \n",
       "\n",
       "      UserGenere_contri  UserAge_contri  UserExperience_contri  \\\n",
       "0              1.056024       -0.000000              -0.980825   \n",
       "1              1.056024       -0.000000              -0.980825   \n",
       "2              1.056024       -0.000000              -0.980825   \n",
       "3              1.056024       -0.000000              -0.980825   \n",
       "4              1.056024       -0.000000              -0.980825   \n",
       "...                 ...             ...                    ...   \n",
       "4137           1.056024       -0.008814              -0.000000   \n",
       "4138           1.056024       -0.000000              -0.000000   \n",
       "4139           1.056024       -0.017628              -0.000000   \n",
       "4140           0.000000       -0.000000              -0.000000   \n",
       "4141           1.056024       -0.008814              -0.000000   \n",
       "\n",
       "      TimeStamp_contri  PlayerSpeed_contri  PlayerAcceleration_contri  \\\n",
       "0             0.009287           -0.000000                   0.000000   \n",
       "1             0.847655           -0.000000                   0.000000   \n",
       "2             1.692209           -0.000000                   0.000000   \n",
       "3             2.534978           -0.000000                   0.000000   \n",
       "4             3.377350           -0.000000                   0.000000   \n",
       "...                ...                 ...                        ...   \n",
       "4137         73.328191          -12.131714                   0.307815   \n",
       "4138         90.186781          -12.389835                   0.184689   \n",
       "4139        241.893058          -14.841990                   0.287294   \n",
       "4140        249.486441          -13.422321                   0.246252   \n",
       "4141         50.573535           -1.161547                  -0.369378   \n",
       "\n",
       "      CameraRotationZ_contri  GameFps_contri importanceProfile  \\\n",
       "0                  -0.000521         0.00000    UserExperience   \n",
       "1                  -0.000486        43.61458    UserExperience   \n",
       "2                  -0.000561        43.61458    UserExperience   \n",
       "3                  -0.000420        43.61458    UserExperience   \n",
       "4                  -0.000364        43.61458    UserExperience   \n",
       "...                      ...             ...               ...   \n",
       "4137                0.000741        43.61458        UserGenere   \n",
       "4138               -0.000368        43.61458        UserGenere   \n",
       "4139               -0.000405        43.61458        UserGenere   \n",
       "4140                0.000932        43.61458        UserGenere   \n",
       "4141               -0.000559        43.61458        UserGenere   \n",
       "\n",
       "       importanceGame  \n",
       "0     CameraRotationZ  \n",
       "1     CameraRotationZ  \n",
       "2     CameraRotationZ  \n",
       "3     CameraRotationZ  \n",
       "4     CameraRotationZ  \n",
       "...               ...  \n",
       "4137      PlayerSpeed  \n",
       "4138      PlayerSpeed  \n",
       "4139      PlayerSpeed  \n",
       "4140      PlayerSpeed  \n",
       "4141      PlayerSpeed  \n",
       "\n",
       "[4142 rows x 19 columns]"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.to_csv('importance.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "discomfort0 = data.drop(data[data['DiscomfortLevel']==1].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "discomfort1 = data.drop(data[data['DiscomfortLevel']==0].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "UserGenere    2071\n",
       "Name: importanceProfile, dtype: int64"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Atributos de perfil relacionadas onde houve desconforto\n",
    "discomfort1['importanceProfile'].value_counts(ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "UserExperience    278\n",
       "UserAge           883\n",
       "UserGenere        910\n",
       "Name: importanceProfile, dtype: int64"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Atributos de perfil relacionados ao estado confortavel\n",
    "discomfort0['importanceProfile'].value_counts(ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CameraRotationZ          6\n",
       "PlayerAcceleration      52\n",
       "PlayerSpeed           2013\n",
       "Name: importanceGame, dtype: int64"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Atributos de jogo relacionadas onde houve desconforto\n",
    "discomfort1['importanceGame'].value_counts(ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PlayerAcceleration      39\n",
       "CameraRotationZ         84\n",
       "PlayerSpeed           1948\n",
       "Name: importanceGame, dtype: int64"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Atributos de jogo relacionados ao estado confortavel\n",
    "discomfort0['importanceGame'].value_counts(ascending=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
